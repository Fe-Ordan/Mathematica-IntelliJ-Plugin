buildscript {
    ext.kotlin_version = '1.1.4-3'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


plugins {
    id "org.jetbrains.intellij" version "0.2.17"
    id "org.jetbrains.kotlin.jvm" version "1.1.4-3"
}

apply plugin: 'java'
apply plugin: "kotlin"


//noinspection GroovyAssignabilityCheck,GrUnresolvedAccess
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    //noinspection GrUnresolvedAccess
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// On travis, we don't want to deploy to Jetbrains that requires credentials
if (project.file('gradle.properties').exists()) {
    apply from: "gradle.properties"
}

intellij {
    version = '2017.2.3'
    pluginName = 'Mathematica-IntelliJ-Plugin'
    updateSinceUntilBuild = false
}

// Simple function to load change-notes.html and description.html into valid text for plugin.xml
def htmlFixer = {htmlFile -> file(htmlFile).text.replace('<html>', '').replace('</html>', '')}

patchPluginXml {
    changeNotes = htmlFixer('resources/META-INF/change-notes.html')
    pluginDescription = htmlFixer('resources/META-INF/description.html')
}


sourceSets {
    //noinspection GroovyAssignabilityCheck
    main {
        java.srcDirs = ['src']
        resources.srcDirs = ['resources']
    }
    test {
        java.srcDirs = ['tests']
        resources.srcDirs = ['testData']
    }
}

task copyResourcesToClasses(type: Copy) {
    from "${projectDir}/testData"
    into "${buildDir}/classes/test"
}

instrumentTestCode.dependsOn copyResourcesToClasses

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile fileTree(dir: 'lib', include: ['*.jar'])
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}

version '2.4.5'