buildscript {
    ext.kotlin_version = '1.1.61'

    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url 'http://dl.bintray.com/jetbrains/intellij-plugin-service'
        }
    }

    dependencies {
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.intellij.plugins:gradle-intellij-plugin:0.3.0-SNAPSHOT"
    }
}


plugins {
    id "org.jetbrains.kotlin.jvm" version '1.1.61'
}

apply plugin: 'java'
apply plugin: 'org.jetbrains.intellij'
apply plugin: "kotlin"


/*
 * Copyright (c) 2017 Patrick Scheibe
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 *
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 *
 */

//noinspection GroovyAssignabilityCheck,GrUnresolvedAccess
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    //noinspection GrUnresolvedAccess
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// On travis, we don't want to deploy to Jetbrains that requires credentials
if (project.file('gradle.properties').exists()) {
    apply from: "gradle.properties"
}

// turn this on for profiling the running sandbox
//task runIde {
//    jvmArgs = ["-agentpath:/home/patrick/build/share/yjp-2017.02/bin/linux-x86-64/libyjpagent.so=delay=2000"]
//}

sourceSets {
    //noinspection GroovyAssignabilityCheck
    main {
        java.srcDirs = ['src']
        resources.srcDirs = ['resources']
    }
    test {
        java.srcDirs = ['tests']
        resources.srcDirs = ['testData']
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile fileTree(dir: 'lib', include: ['*.jar'])
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}

// Information  about the plugin

// Plugin version number
version '3.0pre1'

intellij {
    version = '2017.2.5'
    downloadSources = true
    pluginName = 'Mathematica-IntelliJ-Plugin'
    updateSinceUntilBuild = false
}

// Simple function to load change-notes.html and description.html into valid text for plugin.xml
def htmlFixer = {htmlFile -> file(htmlFile).text.replace('<html>', '').replace('</html>', '')}

patchPluginXml {
    changeNotes = htmlFixer('resources/META-INF/change-notes.html')
    pluginDescription = htmlFixer('resources/META-INF/description.html')
}
